@model QuanLyThuVienCNPMNC.Models.NHANVIEN

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    function validateData() {

        if ($("#TenNV").val() == "") {
            Swal.fire({
                icon: 'warning',
                title: 'Vui lòng nhập tên nhân viên'
            });
            return false;
        } else if ($("#ChucVu").val() == "") {
            Swal.fire({
                icon: 'warning',
                title: 'Vui lòng chọn chức vụ'
            });
            return false;
        } else if ($("#Email").val() == "") {
            Swal.fire({
                icon: 'warning',
                title: 'Vui lòng nhập email'
            });
            return false;
        } else if ($("#MatKhau").val() == "") {
            Swal.fire({
                icon: 'warning',
                title: 'Vui lòng nhập mật khẩu'
            });
            return false;
        
        } else {
            return true;
        }
    }
</script>

<h2>Thêm nhân viên</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Nhân viên</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MaNV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 text-bold">
                @ViewBag.newkey
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenNV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenNV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenNV, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChucVu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ChucVu, new SelectList(new[] { "Thủ thư", "Nhân viên quản lý", "Nhân viên hỗ trợ" }), new { @class = "form-control" })

                @*@Html.EditorFor(model => model.ChucVu, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.ChucVu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm mới" class="btn" style="background-color: #210cae; color:#fff;" onclick="return validateData()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Trở lại", "Index", null, new { @class = "btn btn-outline-dark" })
</div>

